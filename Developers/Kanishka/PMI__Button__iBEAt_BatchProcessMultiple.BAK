
FUNCTION PMI__Button__iBEAt_Import__ExtractDICOM, status, files

    n = n_elements(files)
	dicom = bytarr(n)
	for i=0L,n-1 do begin
	  PMI__Message, status, 'Extracting DICOM data', i/(n-1E)
	  dicom[i] = PMI__Dicom__Valid(files[i])
	endfor
	i = where(dicom EQ 1B, n)
	if n eq 0 then begin
		ok = dialog_message(/information,'No DICOM image data in this folder')
		RETURN, 0B
	endif
	files = files[i]
	RETURN, 1B
END




FUNCTION PMI__Button__iBEAt_Import__Version, file, site

	IF site EQ 'TURKU PET centre' THEN BEGIN
	  RETURN, PMI__Dicom__Read(file,'2001'x,'10C8'x)
	ENDIF

	IF site EQ 'Leeds AIC' THEN BEGIN
	  RETURN, 'BEAT-DKD_10_6'
	ENDIF
END






FUNCTION PMI__Button__iBEAt_Import__Site, file

	Site = PMI__Dicom__Read(file,'0008'x,'0080'x)
	IF Site NE 0B THEN RETURN, site ;Turku

	value = PMI__Dicom__Read(file,'0040'x,'0254'x)
	IF value EQ 'Abdominal^SS BEAT Kidney' THEN RETURN, 'Leeds AIC'

	RETURN, 1B
END






PRO PMI__Button__Event__iBEAt_BatchProcessMultiple, ev

	msg = 'Not yet implemented'
	ok = dialog_message(msg,/information)

END


pro PMI__Button__Control__iBEAt_BatchProcessMultiple, id, v

	widget_control, id, sensitive = 1

;	PMI__Info, tlb(id), Stdy=Stdy
;	widget_control, id, sensitive = obj_valid(Stdy)
end


function PMI__Button__iBEAt_BatchProcessMultiple, parent, value=value, separator=separator

	if n_elements(value) eq 0 then value = 'Batch process - multiple cases'

	return, widget_button(parent, value=value, separator=separator, $
		event_pro = 'PMI__Button__Event__iBEAt_BatchProcessMultiple', $
		pro_set_value = 'PMI__Button__Control__iBEAt_BatchProcessMultiple' )

end
