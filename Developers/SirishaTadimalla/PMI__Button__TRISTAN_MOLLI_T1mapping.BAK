FUNCTION PMI__Button__Input__TRISTAN_MOLLI_T1mapping, top, series

    PMI__Info, top, Stdy=Stdy
    DynSeries = Stdy->Names(0,DefDim=3,ind=ind,sel=sel)

	in = PMI__Form(top, Title='T1 mapping input', [$
		ptr_new({Type:'DROPLIST',Tag:'ser', Label:'Dynamic series', Value:DynSeries, Select:sel})])
	IF in.cancel THEN return, 0

    Series = Stdy->Obj(0,ind[in.ser])
    return, 1
END



pro PMI__Button__Event__TRISTAN_MOLLI_T1mapping, ev

    IF NOT PMI__Button__Input__TRISTAN_MOLLI_T1mapping(ev.top,series) THEN goto, exit

	PMI__Info, ev.top, Status=Status, Stdy=Stdy

	Dom = {z:Series->z(), t:Series->t(0), m:Series->m()}
    Sinf = Stdy->New('SERIES', Domain= Dom,  Name= Series->name() + '_Sinf' )
    Sratio = Stdy->New('SERIES', Domain= Dom,  Name= Series->name() + '_Sratio' )
    St1 = Stdy->New('SERIES', Domain= Dom,  Name= Series->name() + '_T1')
    St1corr = Stdy->New('SERIES', Domain= Dom,  Name= Series->name() + '_T1Corrected')

	d = Series->d()
	time = Series->t()
	;time = fltarr(10)
	;For k=0L, 9 do time[k] = (Series->GETVALUE('2005'x,'1572'x))
	;time = [935, 186, 185, 1685, 936, 1686, 2435, 2436, 3185, 3935, 4685]
	ExpectedT1 = max(time)/4.0

	for j=0L,d[2]-1 do begin

		PMI__Message, status, 'Calculating ', j/(d[2]-1E)

		P = Series->Read(Stdy->DataPath(),z=Series->z(j))
		P = reform(P,d[0]*d[1],d[3],/overwrite)

		Sinf_slice = fltarr(d[0]*d[1])
		Sratio_slice = fltarr(d[0]*d[1])
		T1_slice = fltarr(d[0]*d[1])
		T1_corr_slice = fltarr(d[0]*d[1])

		for i=0L,d[0]*d[1]-1 do begin
			Sig = reform(P[i,*])
			; Identify the minimum and its index and reverse signs of all elements upto this index
			;minS = min(Sig,ind)
			;Sig[0:ind] = -Sig[0:ind]

			Pars = [max(Sig), 2.0, 1/ExpectedT1] ;[Sinf, Sratio(B/A), R1]
			Fit = mpcurvefit(time, Sig, 1+0E*Sig, Pars, function_name='PMI__TRISTAN_MOLLI_T1mapping',/quiet,NODERIVATIVE=1)

			Sinf_slice[i] = Pars[0]
			Sratio_slice[i] = Pars[1]
			T1_slice[i] = 1/Pars[2]
			T1_corr_slice[i] = (Pars[1]-1)/Pars[2]
		endfor

		Sinf->Write, Stdy->DataPath(), Sinf_slice, j
		Sratio->Write, Stdy->DataPath(), Sratio_slice, j
		St1->Write, Stdy->DataPath(), T1_slice, j
		St1corr->Write, Stdy->DataPath(), T1_corr_slice, j

	endfor

	Sinf->Trim, [0E, max(P)]
	Sratio->Trim, [0E, max(P)]
	St1->Trim, [0E, max(time)]
	St1corr->Trim, [0E, max(time)]

    exit: PMI__Control, ev.top, /refresh
end


pro PMI__Button__Control__TRISTAN_MOLLI_T1mapping, id, v

	PMI__Info, tlb(id), Stdy=Stdy
	if obj_valid(Stdy) then begin
		Series = Stdy->Names(0,ns,DefDim=3)
		sensitive = ns gt 0
	endif else sensitive=0
    widget_control, id, sensitive=sensitive
end

function PMI__Button__TRISTAN_MOLLI_T1mapping, parent, value=value,separator=separator

	PMI__TRISTAN_MOLLI_T1mapping

    if n_elements(value) eq 0 then value = 'T1 mapping (Saturation-Recovery)'

    id = widget_button(parent $
    ,   value = value  $
    ,  	event_pro = 'PMI__Button__Event__TRISTAN_MOLLI_T1mapping' $
    ,	pro_set_value = 'PMI__Button__Control__TRISTAN_MOLLI_T1mapping' $
    ,  	separator = separator )

    return, id
end

